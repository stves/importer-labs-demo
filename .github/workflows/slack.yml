name: Slack (freestyle project)
on:
  workflow_dispatch:
jobs:
  build:
    runs-on:
      - ubuntu-latest
    environment: CI
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0
    - name: run command
      shell: bash
      run: |-
        echo "henlo"
        mkdir -p artifacts
        echo 'This is an artifact' >> artifacts/one.txt
    - name: run command
      shell: bash
      run: sleep 1
    - name: run command
      shell: bash
      run: |-
        mkdir -p artifacts
        echo 'This is from another build step' >> artifacts/two.txt
        exit 1
    - name: slack-notify-on-action-start
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
        SLACK_CHANNEL: "${{ secrets.SLACK_CHANNEL }}"
        SLACK_MESSAGE: Default Custom Message
    - id: last_build_status
      if: always()
      uses: actions/github-script@v6.3.3
      with:
        result-encoding: string
        script: |-
          currentWorkflowId = (
            await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            })
          ).data.workflow_id
          runsList = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: currentWorkflowId,
            status: 'completed',
            branch: '${{ env.BRANCH_NAME }}',
            per_page: 1
          });
          return runsList.data.workflow_runs[0].conclusion
    - name: run command
      if: always()
      shell: bash
      run: |-
        echo '${{ steps.last_build_status.outputs.result }}'
        echo '${{ steps.last_build_status.outputs.result == 'failure' }}'
        echo '${{ steps.last_build_status.outputs.result == '"failure"' }}'
    - uses: rtCamp/action-slack-notify@v2.2.0
      if: success()
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
        SLACK_CHANNEL: "${{ secrets.SLACK_CHANNEL }}"
        SLACK_MESSAGE: Custom Success Message
        SLACK_COLOR: success
    - uses: rtCamp/action-slack-notify@v2.2.0
      if: failure() && steps.last_build_status.outputs.result == 'failure'
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
        SLACK_CHANNEL: "${{ secrets.SLACK_CHANNEL }}"
        SLACK_MESSAGE: 'Repeated failure :cry:'
        SLACK_COLOR: failure
    - uses: rtCamp/action-slack-notify@v2.2.0
      if: cancelled()
      env:
        SLACK_WEBHOOK: "${{ secrets.SLACK_WEBHOOK }}"
        SLACK_CHANNEL: "${{ secrets.SLACK_CHANNEL }}"
        SLACK_MESSAGE: Custom Cancelled Message
        SLACK_COLOR: cancelled
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: artifacts/
